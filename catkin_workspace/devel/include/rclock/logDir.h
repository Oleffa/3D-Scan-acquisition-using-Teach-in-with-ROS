// Generated by gencpp from file rclock/logDir.msg
// DO NOT EDIT!


#ifndef RCLOCK_MESSAGE_LOGDIR_H
#define RCLOCK_MESSAGE_LOGDIR_H

#include <ros/service_traits.h>


#include <rclock/logDirRequest.h>
#include <rclock/logDirResponse.h>


namespace rclock
{

struct logDir
{

typedef logDirRequest Request;
typedef logDirResponse Response;
Request request;
Response response;

typedef Request RequestType;
typedef Response ResponseType;

}; // struct logDir
} // namespace rclock


namespace ros
{
namespace service_traits
{


template<>
struct MD5Sum< ::rclock::logDir > {
  static const char* value()
  {
    return "310e138069b8368226f05a8c4e7bb107";
  }

  static const char* value(const ::rclock::logDir&) { return value(); }
};

template<>
struct DataType< ::rclock::logDir > {
  static const char* value()
  {
    return "rclock/logDir";
  }

  static const char* value(const ::rclock::logDir&) { return value(); }
};


// service_traits::MD5Sum< ::rclock::logDirRequest> should match 
// service_traits::MD5Sum< ::rclock::logDir > 
template<>
struct MD5Sum< ::rclock::logDirRequest>
{
  static const char* value()
  {
    return MD5Sum< ::rclock::logDir >::value();
  }
  static const char* value(const ::rclock::logDirRequest&)
  {
    return value();
  }
};

// service_traits::DataType< ::rclock::logDirRequest> should match 
// service_traits::DataType< ::rclock::logDir > 
template<>
struct DataType< ::rclock::logDirRequest>
{
  static const char* value()
  {
    return DataType< ::rclock::logDir >::value();
  }
  static const char* value(const ::rclock::logDirRequest&)
  {
    return value();
  }
};

// service_traits::MD5Sum< ::rclock::logDirResponse> should match 
// service_traits::MD5Sum< ::rclock::logDir > 
template<>
struct MD5Sum< ::rclock::logDirResponse>
{
  static const char* value()
  {
    return MD5Sum< ::rclock::logDir >::value();
  }
  static const char* value(const ::rclock::logDirResponse&)
  {
    return value();
  }
};

// service_traits::DataType< ::rclock::logDirResponse> should match 
// service_traits::DataType< ::rclock::logDir > 
template<>
struct DataType< ::rclock::logDirResponse>
{
  static const char* value()
  {
    return DataType< ::rclock::logDir >::value();
  }
  static const char* value(const ::rclock::logDirResponse&)
  {
    return value();
  }
};

} // namespace service_traits
} // namespace ros

#endif // RCLOCK_MESSAGE_LOGDIR_H
