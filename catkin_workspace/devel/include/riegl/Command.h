// Generated by gencpp from file riegl/Command.msg
// DO NOT EDIT!


#ifndef RIEGL_MESSAGE_COMMAND_H
#define RIEGL_MESSAGE_COMMAND_H

#include <ros/service_traits.h>


#include <riegl/CommandRequest.h>
#include <riegl/CommandResponse.h>


namespace riegl
{

struct Command
{

typedef CommandRequest Request;
typedef CommandResponse Response;
Request request;
Response response;

typedef Request RequestType;
typedef Response ResponseType;

}; // struct Command
} // namespace riegl


namespace ros
{
namespace service_traits
{


template<>
struct MD5Sum< ::riegl::Command > {
  static const char* value()
  {
    return "c8a9e93ba36acade4a5f63ab5669b103";
  }

  static const char* value(const ::riegl::Command&) { return value(); }
};

template<>
struct DataType< ::riegl::Command > {
  static const char* value()
  {
    return "riegl/Command";
  }

  static const char* value(const ::riegl::Command&) { return value(); }
};


// service_traits::MD5Sum< ::riegl::CommandRequest> should match 
// service_traits::MD5Sum< ::riegl::Command > 
template<>
struct MD5Sum< ::riegl::CommandRequest>
{
  static const char* value()
  {
    return MD5Sum< ::riegl::Command >::value();
  }
  static const char* value(const ::riegl::CommandRequest&)
  {
    return value();
  }
};

// service_traits::DataType< ::riegl::CommandRequest> should match 
// service_traits::DataType< ::riegl::Command > 
template<>
struct DataType< ::riegl::CommandRequest>
{
  static const char* value()
  {
    return DataType< ::riegl::Command >::value();
  }
  static const char* value(const ::riegl::CommandRequest&)
  {
    return value();
  }
};

// service_traits::MD5Sum< ::riegl::CommandResponse> should match 
// service_traits::MD5Sum< ::riegl::Command > 
template<>
struct MD5Sum< ::riegl::CommandResponse>
{
  static const char* value()
  {
    return MD5Sum< ::riegl::Command >::value();
  }
  static const char* value(const ::riegl::CommandResponse&)
  {
    return value();
  }
};

// service_traits::DataType< ::riegl::CommandResponse> should match 
// service_traits::DataType< ::riegl::Command > 
template<>
struct DataType< ::riegl::CommandResponse>
{
  static const char* value()
  {
    return DataType< ::riegl::Command >::value();
  }
  static const char* value(const ::riegl::CommandResponse&)
  {
    return value();
  }
};

} // namespace service_traits
} // namespace ros

#endif // RIEGL_MESSAGE_COMMAND_H
