// Generated by gencpp from file riegl/progress.msg
// DO NOT EDIT!


#ifndef RIEGL_MESSAGE_PROGRESS_H
#define RIEGL_MESSAGE_PROGRESS_H

#include <ros/service_traits.h>


#include <riegl/progressRequest.h>
#include <riegl/progressResponse.h>


namespace riegl
{

struct progress
{

typedef progressRequest Request;
typedef progressResponse Response;
Request request;
Response response;

typedef Request RequestType;
typedef Response ResponseType;

}; // struct progress
} // namespace riegl


namespace ros
{
namespace service_traits
{


template<>
struct MD5Sum< ::riegl::progress > {
  static const char* value()
  {
    return "7afca0099e0cddc25243b1e3569895fe";
  }

  static const char* value(const ::riegl::progress&) { return value(); }
};

template<>
struct DataType< ::riegl::progress > {
  static const char* value()
  {
    return "riegl/progress";
  }

  static const char* value(const ::riegl::progress&) { return value(); }
};


// service_traits::MD5Sum< ::riegl::progressRequest> should match 
// service_traits::MD5Sum< ::riegl::progress > 
template<>
struct MD5Sum< ::riegl::progressRequest>
{
  static const char* value()
  {
    return MD5Sum< ::riegl::progress >::value();
  }
  static const char* value(const ::riegl::progressRequest&)
  {
    return value();
  }
};

// service_traits::DataType< ::riegl::progressRequest> should match 
// service_traits::DataType< ::riegl::progress > 
template<>
struct DataType< ::riegl::progressRequest>
{
  static const char* value()
  {
    return DataType< ::riegl::progress >::value();
  }
  static const char* value(const ::riegl::progressRequest&)
  {
    return value();
  }
};

// service_traits::MD5Sum< ::riegl::progressResponse> should match 
// service_traits::MD5Sum< ::riegl::progress > 
template<>
struct MD5Sum< ::riegl::progressResponse>
{
  static const char* value()
  {
    return MD5Sum< ::riegl::progress >::value();
  }
  static const char* value(const ::riegl::progressResponse&)
  {
    return value();
  }
};

// service_traits::DataType< ::riegl::progressResponse> should match 
// service_traits::DataType< ::riegl::progress > 
template<>
struct DataType< ::riegl::progressResponse>
{
  static const char* value()
  {
    return DataType< ::riegl::progress >::value();
  }
  static const char* value(const ::riegl::progressResponse&)
  {
    return value();
  }
};

} // namespace service_traits
} // namespace ros

#endif // RIEGL_MESSAGE_PROGRESS_H
