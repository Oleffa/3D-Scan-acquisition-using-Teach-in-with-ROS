// Generated by gencpp from file riegl/inclination.msg
// DO NOT EDIT!


#ifndef RIEGL_MESSAGE_INCLINATION_H
#define RIEGL_MESSAGE_INCLINATION_H

#include <ros/service_traits.h>


#include <riegl/inclinationRequest.h>
#include <riegl/inclinationResponse.h>


namespace riegl
{

struct inclination
{

typedef inclinationRequest Request;
typedef inclinationResponse Response;
Request request;
Response response;

typedef Request RequestType;
typedef Response ResponseType;

}; // struct inclination
} // namespace riegl


namespace ros
{
namespace service_traits
{


template<>
struct MD5Sum< ::riegl::inclination > {
  static const char* value()
  {
    return "0f5aa311af37faead3f9e90f420c9603";
  }

  static const char* value(const ::riegl::inclination&) { return value(); }
};

template<>
struct DataType< ::riegl::inclination > {
  static const char* value()
  {
    return "riegl/inclination";
  }

  static const char* value(const ::riegl::inclination&) { return value(); }
};


// service_traits::MD5Sum< ::riegl::inclinationRequest> should match 
// service_traits::MD5Sum< ::riegl::inclination > 
template<>
struct MD5Sum< ::riegl::inclinationRequest>
{
  static const char* value()
  {
    return MD5Sum< ::riegl::inclination >::value();
  }
  static const char* value(const ::riegl::inclinationRequest&)
  {
    return value();
  }
};

// service_traits::DataType< ::riegl::inclinationRequest> should match 
// service_traits::DataType< ::riegl::inclination > 
template<>
struct DataType< ::riegl::inclinationRequest>
{
  static const char* value()
  {
    return DataType< ::riegl::inclination >::value();
  }
  static const char* value(const ::riegl::inclinationRequest&)
  {
    return value();
  }
};

// service_traits::MD5Sum< ::riegl::inclinationResponse> should match 
// service_traits::MD5Sum< ::riegl::inclination > 
template<>
struct MD5Sum< ::riegl::inclinationResponse>
{
  static const char* value()
  {
    return MD5Sum< ::riegl::inclination >::value();
  }
  static const char* value(const ::riegl::inclinationResponse&)
  {
    return value();
  }
};

// service_traits::DataType< ::riegl::inclinationResponse> should match 
// service_traits::DataType< ::riegl::inclination > 
template<>
struct DataType< ::riegl::inclinationResponse>
{
  static const char* value()
  {
    return DataType< ::riegl::inclination >::value();
  }
  static const char* value(const ::riegl::inclinationResponse&)
  {
    return value();
  }
};

} // namespace service_traits
} // namespace ros

#endif // RIEGL_MESSAGE_INCLINATION_H
